crystal_doc_search_index_callback({"repository_name":"github.com/icyleaf/totem","body":"![totem-logo](https://github.com/icyleaf/totem/raw/master/logo-small.png)\n\n# Totem\n\n[![Language](https://img.shields.io/badge/language-crystal-776791.svg)](https://github.com/crystal-lang/crystal)\n[![Tag](https://img.shields.io/github/tag/icyleaf/totem.svg)](https://github.com/icyleaf/totem/blob/master/CHANGELOG.md)\n[![Build Status](https://img.shields.io/circleci/project/github/icyleaf/totem/master.svg?style=flat)](https://circleci.com/gh/icyleaf/totem)\n\nCrystal configuration with spirit. Inspired from Go's [viper](https://github.com/spf13/viper). Totem Icon by lastspark from <a href=\"https://thenounproject.com\">Noun Project</a>.\n\n<!-- TOC -->\n\n- [What is Totem?](#what-is-totem)\n- [Installation](#installation)\n- [Quick Start](#quick-start)\n  - [Operating configuration](#operating-configuration)\n  - [Loading configuration](#loading-configuration)\n    - [From raw string](#from-raw-string)\n    - [From file](#from-file)\n- [Usage](#usage)\n  - [Load configuration with multiple paths](#load-configuration-with-multiple-paths)\n  - [Set Alias and using alias](#set-alias-and-using-alias)\n  - [Working with nested key](#working-with-nested-key)\n  - [Working with Envoriment variables](#working-with-envoriment-variables)\n  - [Iterating configuration](#iterating-configuration)\n  - [Serialization](#serialization)\n  - [Storing configuration to file](#storing-configuration-to-file)\n- [Help and Discussion](#help-and-discussion)\n- [Donate](#donate)\n- [How to Contribute](#how-to-contribute)\n- [You may also like](#you-may-also-like)\n- [License](#license)\n\n<!-- /TOC -->\n\n## What is Totem?\n\nConfiguration file formats is always the problem, you want to focus on building awesome things. Totem is here to help with that.\n\nTotem has following features:\n\n- Load and parse a configuration file or string in JSON, YAML, dotenv formats.\n- Reading from environment variables.\n- Provide a mechanism to set default values for your different configuration options.\n- Provide an alias system to easily rename parameters without breaking existing code.\n- Write configuration to file with JSON, YAML formats.\n\nUses the following precedence order. Each item takes precedence over the item below it:\n\n- alias\n- override, explicit call to `set`\n- env\n- config\n- default\n\nTotem configuration keys are case insensitive.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  totem:\n    github: icyleaf/totem\n```\n\n## Quick Start\n\n```crystal\nrequire \"totem\"\n```\n\n### Operating configuration\n\n```crystal\ntotem = Totem.new\ntotem.set_default(\"name\", \"foo\")\ntotem.set_defaults({\n  \"age\"    => 18,\n  \"gender\" => \"male\",\n  \"hobbies\" => [\n    \"skateboarding\",\n    \"snowboarding\",\n    \"go\"\n  ]\n})\n\ntotem.get(\"name\").as_s # => \"foo\"\ntotem.get(\"age\").as_i # => 18\ntotem.set(\"name\", \"bar\")\ntotem.alias(alias_key: \"key\", key: \"name\")\ntotem.get(\"name\").as_s # => \"bar\"\ntotem.get(\"key\").as_s # => \"bar\"\n```\n\n### Loading configuration\n\nSupport `JSON`, `YAML` and dotenv data from raw string and file.\n\n#### From raw string\n\nLoad yaml string\n\n```crystal\nraw = <<-EOF\nHacker: true\nname: steve\nhobbies:\n- skateboarding\n- snowboarding\n- go\nclothing:\n  jacket: leather\n  trousers: denim\n  pants:\n    size: large\nage: 35\neyes : brown\nEOF\n\ntotem = Totem.from_yaml raw\ntotem.get(\"Hacker\").as_bool                           # => true\ntotem.get(\"age\").as_i                                 # => 35\ntotem.get(\"clothing\").as_h[\"pants\"].as_h[\"size\"].as_s # => \"large\"\n```\n\nLoad json string\n\n```crystal\nraw = <<-EOF\n{\n  \"id\": \"0001\",\n  \"type\": \"donut\",\n  \"name\": \"Cake\",\n  \"ppu\": 0.55,\n  \"batters\": {\n    \"batter\": [\n      {\n        \"type\": \"Regular\"\n      },\n      {\n        \"type\": \"Chocolate\"\n      },\n      {\n        \"type\": \"Blueberry\"\n      },\n      {\n        \"type\": \"Devil's Food\"\n      }\n    ]\n  }\n}\nEOF\n\ntotem = Totem.from_json raw\ntotem.get(\"name\")                                         # => \"Cake\"\ntotem.get(\"ppu\")                                          # => 0.55\ntotem.get(\"batters\").as_h[\"batter\"].as_a[0].as_h[\"type\"]  # => \"Regular\"\n```\n\nLoad dotenv string\n\n```crystal\nraw = <<-EOF\n# COMMENTS=work\nSTR='foo'\nSTR_WITH_COMMENTS=bar         # str with comment\nSTR_WITH_HASH_SYMBOL=\"abc#123\"#stick comment\nINT=33\nEOF\n\ntotem = Totem.from_env raw\ntotem.get(\"str\")                    # => \"foo\"\ntotem.get(\"str_with_comments\")      # => bar\ntotem.get(\"str_with_hash_symbol\")   # => \"abc#123\"\ntotem.get(\"int\")                    # => \"33\"\n```\n\n#### From file\n\n```crystal\n# Load yaml file from file with path\ntotem = Totem.from_file \"./spec/fixtures/config.yaml\"\n\n# Load json file from file with multi-paths\ntotem = Totem.from_file \"config.yaml\", [\"/etc\", \".\", \"./spec/fixtures\"]\n\n# Load dotenv file\ntotem = Totem.from_file \"sample.env\"\n```\n\n## Usage\n\n### Load configuration with multiple paths\n\nTotem can search multiple paths, but currently a single Totem instance only supports a single\nconfiguration file.\n\n```crystal\ntotem = Totem.new(\"config\", \"/etc/totem/\")  # => New a instance with name and path of config file\ntotem.config_paths << \"~/.totem\"            # => path to look for the config file in\ntotem.config_paths << \"./config\"            # => optionally look for config in the working directory\nbegin\n  totem.load!                               # => Find and read the config file (order by yaml/yml/json/env)\nrescue e\n  puts \"Fatal error config file: #{e.message}\"\nend\n```\n\n### Set Alias and using alias\n\nAliases permit a single value to be referenced by multiple keys\n\n```crystal\ntotem.alias(\"nickname\", \"Name\")\n\ntotem.set(\"name\", \"foo\")\ntotem.set(\"nickname\", \"bar\")\n\ntotem.get(\"name\")       # => \"foo\"\ntotem.get(\"nickname\")   # => \"foo\"\n```\n\n### Working with nested key\n\nAll accessor methods accept nested key:\n\n```crystal\ntotem.set_default(\"profile.user.name\", \"foo\")\ntotem.set(\"profile.user.age\", 13)\ntotem.alias(\"username\", \"profile.user.name\")\ntotem.bind_env(\"profile.user.nickname\", \"PROFILE_USER_NICKNAME\")\ntotem.get(\"profile.user.age\")\n```\n\n### Working with Envoriment variables\n\nTotem has full support for environment variables, example:\n\n```crystal\nENV[\"ID\"] = \"123\"\nENV[\"FOOD\"] = \"Pinapple\"\nENV[\"NAME\"] = \"Polly\"\n\ntotem = Totem.new\n\ntotem.bind_env(\"ID\")\ntotem.get(\"id\").as_i        # => 123\n\ntotem.bind_env(\"f\", \"FOOD\")\ntotem.get(\"f\").as_s         # => \"Pinapple\"\n\ntotem.automative_env\ntotem.get(\"name\").as_s      # => \"Polly\"\n```\n\nWorking with envoriment prefix:\n\n```crystal\ntotem.automative_env(prefix: \"totem\")\n# Same as\n# totem.env_prefix = \"totem\"\n# totem.automative_env = true\n\ntotem.get(\"id\").as_i    # => 123\ntotem.get(\"food\").as_s  # => \"Pinapple\"\ntotem.get(\"name\").as_s  # => \"Polly\"\n```\n\n### Iterating configuration\n\nIterate in Totem is very easy, you can get `#keys`, `#flat_keys`, `#settings` (a.k.a `#to_h`) even iterating it directly with `#each`:\n\n```crystal\ntotem.settings    # => {\"id\" => 123, \"user\" => {\"name\" => \"foobar\", \"age\" => 20}}\ntotem.keys        # => [\"id\", \"user\"]\ntotem.flat_keys   # => [\"id\", \"user.name\", \"user.age\"]\n\ntotem.each do |key, value|\n  # do something\nend\n```\n\n### Serialization\n\nSerialize configuration to `Struct`, at current stage you can pass a `JSON::Serializable`/`YAML::Serializable` struct to mapping.\n\n```crystal\nstruct Profile\n  include JSON::Serializable\n\n  property name : String\n  property hobbies : Array(String)\n  property age : Int32\n  property eyes : String\nend\n\ntotem = Totem.from_file \"spec/fixtures/config.yaml\"\nprofile = totem.mapping(Profile)\nprofile.name      # => \"steve\"\nprofile.age       # => 35\nprofile.eyes      # => \"brown\"\nprofile.hobbies   # => [\"skateboarding\", \"snowboarding\", \"go\"]\n```\n\nSerialize configuration with part of key:\n\n```crystal\nstruct Clothes\n  include JSON::Serializable\n\n  property jacket : String\n  property trousers : String\n  property pants : Hash(String, String)\nend\n\ntotem = Totem.from_file \"spec/fixtures/config.yaml\"\nclothes = profile.mapping(Clothes, \"clothing\")\n# => Clothes(@jacket=\"leather\", @pants={\"size\" => \"large\"}, @trousers=\"denim\")\n```\n\n### Storing configuration to file\n\n```crystal\nraw = <<-EOF\nHacker: true\nname: steve\nhobbies:\n- skateboarding\n- snowboarding\n- go\nclothing:\n  jacket: leather\n  trousers: denim\n  pants:\n    size: large\nage: 35\neyes : brown\nEOF\n\ntotem = Totem.from_yaml raw\ntotem.set(\"nickname\", \"Freda\")\ntotem.set(\"eyes\", \"blue\")\ntotem.store!(\"profile.json\")\n```\n\n## Help and Discussion\n\nYou can browse the API documents:\n\nhttps://icyleaf.github.io/totem/\n\nYou can browse the Changelog:\n\nhttps://github.com/icyleaf/totem/blob/master/CHANGELOG.md\n\nIf you have found a bug, please create a issue here:\n\nhttps://github.com/icyleaf/totem/issues/new\n\n## Donate\n\nTotem is a open source, collaboratively funded project. If you run a business and are using Totem in a revenue-generating product,\nit would make business sense to sponsor Totem development. Individual users are also welcome to make a one time donation\nif Totem has helped you in your work or personal projects.\n\nYou can donate via [Paypal](https://www.paypal.me/icyleaf/5).\n\n## How to Contribute\n\nYour contributions are always welcome! Please submit a pull request or create an issue to add a new question, bug or feature to the list.\n\nAll [Contributors](https://github.com/icyleaf/totem/graphs/contributors) are on the wall.\n\n## You may also like\n\n- [halite](https://github.com/icyleaf/halite) - Crystal HTTP Requests Client with a chainable REST API, built-in sessions and loggers.\n- [poncho](https://github.com/icyleaf/poncho) - A .env parser/loader improved for performance.\n- [popcorn](https://github.com/icyleaf/popcorn) - Easy and Safe casting from one type to another.\n- [fast-crystal](https://github.com/icyleaf/fast-crystal) - 💨 Writing Fast Crystal 😍 -- Collect Common Crystal idioms.\n\n## License\n\n[MIT License](https://github.com/icyleaf/totem/blob/master/LICENSE) © icyleaf","program":{"html_id":"github.com/icyleaf/totem/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/icyleaf/totem","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/icyleaf/totem/Totem","path":"Totem.html","kind":"module","full_name":"Totem","name":"Totem","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"totem/any.cr","line_number":3,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr"},{"filename":"totem/config.cr","line_number":6,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr"},{"filename":"totem/exception.cr","line_number":1,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/exception.cr"},{"filename":"totem/utils.cr","line_number":1,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/utils.cr"},{"filename":"totem/version.cr","line_number":1,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/version.cr"},{"filename":"totem.cr","line_number":3,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.2.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"from_env(raw:String)-class-method","html_id":"from_env(raw:String)-class-method","name":"from_env","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L24","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L24","def":{"name":"from_env","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.parse(raw, \"env\")"}},{"id":"from_file(file:String,paths:Array(String)?=nil)-class-method","html_id":"from_file(file:String,paths:Array(String)?=nil)-class-method","name":"from_file","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"paths","doc":null,"default_value":"nil","external_name":"paths","restriction":"Array(String) | ::Nil"}],"args_string":"(file : String, paths : Array(String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L8","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L8","def":{"name":"from_file","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"paths","doc":null,"default_value":"nil","external_name":"paths","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.from_file(file, paths)"}},{"id":"from_json(raw:String)-class-method","html_id":"from_json(raw:String)-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L16","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L16","def":{"name":"from_json","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.parse(raw, \"json\")"}},{"id":"from_yaml(raw:String)-class-method","html_id":"from_yaml(raw:String)-class-method","name":"from_yaml","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L20","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L20","def":{"name":"from_yaml","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.parse(raw, \"yaml\")"}},{"id":"parse(raw:String,type:String)-class-method","html_id":"parse(raw:String,type:String)-class-method","name":"parse","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(raw : String, type : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L12","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L12","def":{"name":"parse","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.parse(raw, type)"}}],"constructors":[{"id":"new(config_name=&quot;config&quot;,config_type:String?=nil,config_paths:Array(String)=[]ofString)-class-method","html_id":"new(config_name=&amp;quot;config&amp;quot;,config_type:String?=nil,config_paths:Array(String)=[]ofString)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_name","doc":null,"default_value":"\"config\"","external_name":"config_name","restriction":""},{"name":"config_type","doc":null,"default_value":"nil","external_name":"config_type","restriction":"String | ::Nil"},{"name":"config_paths","doc":null,"default_value":"[] of String","external_name":"config_paths","restriction":"Array(String)"}],"args_string":"(config_name = <span class=\"s\">&quot;config&quot;</span>, config_type : String? = <span class=\"n\">nil</span>, config_paths : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L4","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem.cr#L4","def":{"name":"new","args":[{"name":"config_name","doc":null,"default_value":"\"config\"","external_name":"config_name","restriction":""},{"name":"config_type","doc":null,"default_value":"nil","external_name":"config_type","restriction":"String | ::Nil"},{"name":"config_paths","doc":null,"default_value":"[] of String","external_name":"config_paths","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config.new(config_name, config_type, config_paths)"}}],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/icyleaf/totem/Totem/Any","path":"Totem/Any.html","kind":"struct","full_name":"Totem::Any","name":"Any","abstract":false,"superclass":{"html_id":"github.com/icyleaf/totem/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/icyleaf/totem/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/icyleaf/totem/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/icyleaf/totem/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"totem/any.cr","line_number":6,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem","kind":"module","full_name":"Totem","name":"Totem"},"doc":"`Totem::Any` is a convenient wrapper around all possible types(`Totem::Any::Type`) and\ncan be used for traversing dynamic or unkown types.","summary":"<p><code><a href=\"../Totem/Any.html\">Totem::Any</a></code> is a convenient wrapper around all possible types(<code><a href=\"../Totem/Any/Type.html\">Totem::Any::Type</a></code>) and can be used for traversing dynamic or unkown types.</p>","class_methods":[],"constructors":[{"id":"new(raw:Type)-class-method","html_id":"new(raw:Type)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Type"}],"args_string":"(raw : Type)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L11","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L11","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(raw:Array(_))-class-method","html_id":"new(raw:Array(_))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array(_)"}],"args_string":"(raw : Array(_))","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L14","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L14","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array(_)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(raw:Hash(String,_))-class-method","html_id":"new(raw:Hash(String,_))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash(String, _)"}],"args_string":"(raw : Hash(String, _))","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L18","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L18","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](key:String):Any-instance-method","html_id":"[](key:String):Any-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Any","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L118","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L118","def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"object = @raw\nif object.is_a?(Hash)\n  object[key]\nelse\n  if (object.is_a?(JSON::Any) && (json = object.as(JSON::Any))) && json.as_h?\n    as_h[key]\n  else\n    if (object.is_a?(YAML::Any) && (yaml = object.as(YAML::Any))) && yaml.as_h?\n      as_h[key]\n    else\n      raise(Error.new(\"Expected Hash for #[](index : String), not #{object.class}\"))\n    end\n  end\nend\n"}},{"id":"[](key:Int):Any-instance-method","html_id":"[](key:Int):Any-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"}],"args_string":"(key : Int) : Any","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L105","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L105","def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"object = @raw\nif object.is_a?(Array)\n  object[key]\nelse\n  if (object.is_a?(JSON::Any) && (json = object.as(JSON::Any))) && json.as_a?\n    as_a[key]\n  else\n    if (object.is_a?(YAML::Any) && (yaml = object.as(YAML::Any))) && yaml.as_a?\n      as_a[key]\n    else\n      raise(Error.new(\"Expected Array for #[](index : Int), not #{object.class}\"))\n    end\n  end\nend\n"}},{"id":"[]?(key:String):Any?-instance-method","html_id":"[]?(key:String):Any?-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Any?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L144","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L144","def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any | ::Nil","visibility":"Public","body":"object = @raw\nif object.is_a?(Hash)\n  object[key]?\nelse\n  if (object.is_a?(JSON::Any) && (json = object.as(JSON::Any))) && json.as_h?\n    as_h[key]?\n  else\n    if (object.is_a?(YAML::Any) && (yaml = object.as(YAML::Any))) && yaml.as_h?\n      as_h[key]?\n    else\n      raise(Error.new(\"Expected Hash for #[](index : String), not #{object.class}\"))\n    end\n  end\nend\n"}},{"id":"[]?(key:Int):Any?-instance-method","html_id":"[]?(key:Int):Any?-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"}],"args_string":"(key : Int) : Any?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L131","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L131","def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any | ::Nil","visibility":"Public","body":"object = @raw\nif object.is_a?(Array)\n  object[key]?\nelse\n  if (object.is_a?(JSON::Any) && (json = object.as(JSON::Any))) && json.as_a?\n    as_a[key]?\n  else\n    if (object.is_a?(YAML::Any) && (yaml = object.as(YAML::Any))) && yaml.as_a?\n      as_a[key]?\n    else\n      raise(Error.new(\"Expected Array for #[](index : Int), not #{object.class}\"))\n    end\n  end\nend\n"}},{"id":"as_a:Array(Any)-instance-method","html_id":"as_a:Array(Any)-instance-method","name":"as_a","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Any)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L94","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L94","def":{"name":"as_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Any)","visibility":"Public","body":"case object = @raw\nwhen Array\n  object.as(Array)\nwhen YAML::Any, JSON::Any\n  object.as_a.map do |value|\n    Any.new(value)\n  end\nelse\n  Popcorn.raise_error!(object.class.to_s, \"Array\")\nend"}},{"id":"as_a?:Array(Any)?-instance-method","html_id":"as_a?:Array(Any)?-instance-method","name":"as_a?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Any)?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L88","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L88","def":{"name":"as_a?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Any) | ::Nil","visibility":"Public","body":"if (@raw.is_a?(Array) || (@raw.is_a?(JSON::Any) && (@raw.as(JSON::Any)).as_a?)) || (@raw.is_a?(YAML::Any) && (@raw.as(YAML::Any)).as_a?)\n  as_a\nend"}},{"id":"as_bool-instance-method","html_id":"as_bool-instance-method","name":"as_bool","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L54","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L54","def":{"name":"as_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(@raw)"}},{"id":"as_bool?-instance-method","html_id":"as_bool?-instance-method","name":"as_bool?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L50","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L50","def":{"name":"as_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(@raw)"}},{"id":"as_f-instance-method","html_id":"as_f-instance-method","name":"as_f","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L46","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L46","def":{"name":"as_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(@raw)"}},{"id":"as_f?-instance-method","html_id":"as_f?-instance-method","name":"as_f?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L42","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L42","def":{"name":"as_f?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(@raw)"}},{"id":"as_h:Hash(String,Any)-instance-method","html_id":"as_h:Hash(String,Any)-instance-method","name":"as_h","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Any)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L73","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L73","def":{"name":"as_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Any)","visibility":"Public","body":"case object = @raw\nwhen Hash\n  object.as(Hash(String, Any))\nwhen YAML::Any, JSON::Any\n  Hash(String, Any).new.tap do |obj|\n    object.as_h.each do |key, value|\n      obj[key.to_s] = Any.new(value)\n    end\n  end\nelse\n  Popcorn.raise_error!(object.class.to_s, \"Hash\")\nend"}},{"id":"as_h?:Hash(String,Any)?-instance-method","html_id":"as_h?:Hash(String,Any)?-instance-method","name":"as_h?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Any)?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L67","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L67","def":{"name":"as_h?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Any) | ::Nil","visibility":"Public","body":"if (@raw.is_a?(Hash) || (@raw.is_a?(JSON::Any) && (@raw.as(JSON::Any)).as_h?)) || (@raw.is_a?(YAML::Any) && (@raw.as(YAML::Any)).as_h?)\n  as_h\nend"}},{"id":"as_i-instance-method","html_id":"as_i-instance-method","name":"as_i","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L30","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L30","def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(@raw)"}},{"id":"as_i64-instance-method","html_id":"as_i64-instance-method","name":"as_i64","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L38","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L38","def":{"name":"as_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(@raw)"}},{"id":"as_i64?-instance-method","html_id":"as_i64?-instance-method","name":"as_i64?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L34","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L34","def":{"name":"as_i64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(@raw)"}},{"id":"as_i?-instance-method","html_id":"as_i?-instance-method","name":"as_i?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L26","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L26","def":{"name":"as_i?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(@raw)"}},{"id":"as_nil:Nil-instance-method","html_id":"as_nil:Nil-instance-method","name":"as_nil","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L58","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L58","def":{"name":"as_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"case object = @raw\nwhen JSON::Any, YAML::Any\n  object.as_nil\nelse\n  object.as(Nil)\nend"}},{"id":"as_s-instance-method","html_id":"as_s-instance-method","name":"as_s","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L174","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L174","def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case object = @raw\nwhen YAML::Any, JSON::Any\n  object.as_s\nelse\n  object.as(String)\nend"}},{"id":"as_s?-instance-method","html_id":"as_s?-instance-method","name":"as_s?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L183","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L183","def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case object = @raw\nwhen YAML::Any, JSON::Any\n  object.as_s?\nwhen String\n  object.as(String)\nend"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L196","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L196","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Any.new(@raw.clone)"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L192","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L192","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Any.new(@raw.dup)"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L201","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L201","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = raw.hash(hasher)\nhasher\n"}},{"id":"raw:Type-instance-method","html_id":"raw:Type-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Type","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L9","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L9","def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Type","visibility":"Public","body":"@raw"}},{"id":"size:Int-instance-method","html_id":"size:Int-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L157","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr#L157","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"object = @raw\nif object.is_a?(Array) || object.is_a?(Hash)\n  object.size\nelse\n  if (object.is_a?(JSON::Any) && (json = object.as(JSON::Any))) && json.as_h?\n    json.as_h.size\n  else\n    if (object.is_a?(JSON::Any) && (json = object.as(JSON::Any))) && json.as_a?\n      json.as_a.size\n    else\n      if (object.is_a?(YAML::Any) && (yaml = object.as(YAML::Any))) && yaml.as_h?\n        yaml.as_h.size\n      else\n        if (object.is_a?(YAML::Any) && (yaml = object.as(YAML::Any))) && yaml.as_a?\n          yaml.as_a.size\n        else\n          raise(Error.new(\"Expected Arra, Hash for #size, not #{object.class}\"))\n        end\n      end\n    end\n  end\nend\n"}}],"macros":[],"types":[{"html_id":"github.com/icyleaf/totem/Totem/Any/Type","path":"Totem/Any/Type.html","kind":"alias","full_name":"Totem::Any::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"totem/any.cr","line_number":7,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/any.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":true,"aliased":"(Array(Totem::Any) | Bool | Float64 | Hash(String, Totem::Any) | Int32 | Int64 | JSON::Any | String | YAML::Any | Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem/Any","kind":"struct","full_name":"Totem::Any","name":"Any"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/icyleaf/totem/Totem/Config","path":"Totem/Config.html","kind":"class","full_name":"Totem::Config","name":"Config","abstract":false,"superclass":{"html_id":"github.com/icyleaf/totem/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/icyleaf/totem/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/icyleaf/totem/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"totem/config.cr","line_number":14,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SUPPORTED_EXTS","name":"SUPPORTED_EXTS","value":"[\"yaml\", \"yml\", \"json\", \"env\"] of ::String","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem","kind":"module","full_name":"Totem","name":"Totem"},"doc":"`Totem::Config` is the core configuration reader, parser and writer.\n\nThe config type are avaiable in:\n\n- yaml/yml\n- json\n- env","summary":"<p><code><a href=\"../Totem/Config.html\">Totem::Config</a></code> is the core configuration reader, parser and writer.</p>","class_methods":[{"id":"from_file(file:String,paths:Array(String)?=nil)-class-method","html_id":"from_file(file:String,paths:Array(String)?=nil)-class-method","name":"from_file","doc":"Load configuration from a file\n\n```\nTotem::Config.from_file(\"config.yaml\", [\"/etc/totem\", \"~/.totem\", \"./\"])\n```","summary":"<p>Load configuration from a file</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"paths","doc":null,"default_value":"nil","external_name":"paths","restriction":"Array(String) | ::Nil"}],"args_string":"(file : String, paths : Array(String)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L22","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L22","def":{"name":"from_file","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"paths","doc":null,"default_value":"nil","external_name":"paths","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"config_name = File.basename(file, File.extname(file))\nconfig_type = Utils.config_type(file)\ninstance = new(config_name, config_type)\nif config_paths = paths\n  config_paths.each do |path|\n    instance.config_paths << path\n  end\nelse\n  instance.config_paths << (File.dirname(file))\nend\ninstance.load!\ninstance\n"}},{"id":"parse(raw:String,type:String)-class-method","html_id":"parse(raw:String,type:String)-class-method","name":"parse","doc":"Parse configuration from a raw string.","summary":"<p>Parse configuration from a raw string.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"args_string":"(raw : String, type : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L40","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L40","def":{"name":"parse","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"instance = new(config_type: type)\ninstance.parse(raw)\ninstance\n"}}],"constructors":[{"id":"new(config_name=&quot;config&quot;,config_type:String?=nil,config_paths:Array(String)=[]ofString,config_delimiter=&quot;.&quot;,automatic_env=false)-class-method","html_id":"new(config_name=&amp;quot;config&amp;quot;,config_type:String?=nil,config_paths:Array(String)=[]ofString,config_delimiter=&amp;quot;.&amp;quot;,automatic_env=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_name","doc":null,"default_value":"\"config\"","external_name":"config_name","restriction":""},{"name":"config_type","doc":null,"default_value":"nil","external_name":"config_type","restriction":"String | ::Nil"},{"name":"config_paths","doc":null,"default_value":"[] of String","external_name":"config_paths","restriction":"Array(String)"},{"name":"config_delimiter","doc":null,"default_value":"\".\"","external_name":"config_delimiter","restriction":""},{"name":"automatic_env","doc":null,"default_value":"false","external_name":"automatic_env","restriction":""}],"args_string":"(config_name = <span class=\"s\">&quot;config&quot;</span>, config_type : String? = <span class=\"n\">nil</span>, config_paths : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, config_delimiter = <span class=\"s\">&quot;.&quot;</span>, automatic_env = <span class=\"n\">false</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L60","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L60","def":{"name":"new","args":[{"name":"config_name","doc":null,"default_value":"\"config\"","external_name":"config_name","restriction":""},{"name":"config_type","doc":null,"default_value":"nil","external_name":"config_type","restriction":"String | ::Nil"},{"name":"config_paths","doc":null,"default_value":"[] of String","external_name":"config_paths","restriction":"Array(String)"},{"name":"config_delimiter","doc":null,"default_value":"\".\"","external_name":"config_delimiter","restriction":""},{"name":"automatic_env","doc":null,"default_value":"false","external_name":"automatic_env","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(config_name, config_type, config_paths, config_delimiter, automatic_env)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](key:String):Any-instance-method","html_id":"[](key:String):Any-instance-method","name":"[]","doc":"Alias to `get` method.\n\n```\ntotem[\"id\"]\ntotem[\"user.name\"]\n```","summary":"<p>Alias to <code><a href=\"../Totem/Config.html#get%28key%3AString%29%3AAny-instance-method\">#get</a></code> method.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Any","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L116","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L116","def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"get(key)"}},{"id":"[]=(key:String,value:T)forallT-instance-method","html_id":"[]=(key:String,value:T)forallT-instance-method","name":"[]=","doc":"Alias to `set` method.\n\n```\ntotem[\"id\"] = 123\ntotem[\"user.name\"] = \"foobar\"\n```","summary":"<p>Alias to <code><a href=\"../Totem/Config.html#set%28key%3AString%2Cvalue%3AT%29forallT-instance-method\">#set</a></code> method.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(key : String, value : T) forall T","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L106","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L106","def":{"name":"[]=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"set(key, value)"}},{"id":"[]?(key:String):Any?-instance-method","html_id":"[]?(key:String):Any?-instance-method","name":"[]?","doc":"Alias to `fetch` method but return `Nil` if not exists.\n\n```\ntotem[\"id\"]?\ntotem[\"user.name\"]?\n```","summary":"<p>Alias to <code><a href=\"../Totem/Config.html#fetch%28key%3AString%2Cdefault_value%3AAny%7CAny%3A%3AType%3F%3Dnil%29%3AAny%3F-instance-method\">#fetch</a></code> method but return <code>Nil</code> if not exists.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Any?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L126","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L126","def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any | ::Nil","visibility":"Public","body":"find(key)"}},{"id":"alias(alias_key:String,key:String)-instance-method","html_id":"alias(alias_key:String,key:String)-instance-method","name":"alias","doc":"Register an aliase\n\n```\ntotem.set(\"food\", \"apple\")\ntotem.alias(\"f\", \"food\")\n\ntotem.set(\"user.name\", \"foobar\")\ntotem.alias(\"username\", \"user.name\")\n```","summary":"<p>Register an aliase</p>","abstract":false,"args":[{"name":"alias_key","doc":null,"default_value":"","external_name":"alias_key","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(alias_key : String, key : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L203","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L203","def":{"name":"alias","args":[{"name":"alias_key","doc":null,"default_value":"","external_name":"alias_key","restriction":"String"},{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@aliases[alias_key.downcase] = key.downcase"}},{"id":"automatic_env(prefix:String?=nil)-instance-method","html_id":"automatic_env(prefix:String?=nil)-instance-method","name":"automatic_env","doc":"Enable and load ENV variables to Totem to search.\n\nIt provide an argument to quick define the env prefix(`env_prefix=`)\n\n```\nENV[\"TOTEM_ENV\"] = \"development\"\n\ntotem.automatic_env(\"totem\")\ntotem.get(\"env\") # => \"development\"\n```","summary":"<p>Enable and load ENV variables to Totem to search.</p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"nil","external_name":"prefix","restriction":"String | ::Nil"}],"args_string":"(prefix : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L260","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L260","def":{"name":"automatic_env","args":[{"name":"prefix","doc":null,"default_value":"nil","external_name":"prefix","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if prefix\n  @env_prefix = prefix.not_nil!.upcase\nend\n@automatic_env = true\n"}},{"id":"bind_env(key:String,real_key:String?=nil)-instance-method","html_id":"bind_env(key:String,real_key:String?=nil)-instance-method","name":"bind_env","doc":"Bind a key to a ENV vairable\n\nIf only a key is provided, it will use the `ENV` key matching the key, upcased.\n\nIt will append env prefix when `env_prefix` is seted and the key is not provided.\n\n> Case-sensitive for a key.\n\n```\ntotem.bind_env(\"HOME\")\ntotem.bind_env(\"root_path\", \"HOME\")\n\ntotem.get(\"home\")\ntotem.get(\"root_path\")\n```","summary":"<p>Bind a key to a ENV vairable</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"real_key","doc":null,"default_value":"nil","external_name":"real_key","restriction":"String | ::Nil"}],"args_string":"(key : String, real_key : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L222","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L222","def":{"name":"bind_env","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"real_key","doc":null,"default_value":"nil","external_name":"real_key","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = key.downcase\nenv_key = if real_key\n  real_key.not_nil!\nelse\n  env_key(key)\nend\n@env[key] = env_key\n"}},{"id":"config_delimiter:String-instance-method","html_id":"config_delimiter:String-instance-method","name":"config_delimiter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L50","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L50","def":{"name":"config_delimiter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_delimiter"}},{"id":"config_delimiter=(config_delimiter)-instance-method","html_id":"config_delimiter=(config_delimiter)-instance-method","name":"config_delimiter=","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_delimiter","doc":null,"default_value":"","external_name":"config_delimiter","restriction":""}],"args_string":"(config_delimiter)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L50","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L50","def":{"name":"config_delimiter=","args":[{"name":"config_delimiter","doc":null,"default_value":"","external_name":"config_delimiter","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_delimiter = config_delimiter"}},{"id":"config_file:String?-instance-method","html_id":"config_file:String?-instance-method","name":"config_file","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L46","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L46","def":{"name":"config_file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@config_file"}},{"id":"config_name:String-instance-method","html_id":"config_name:String-instance-method","name":"config_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L48","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L48","def":{"name":"config_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_name"}},{"id":"config_name=(config_name)-instance-method","html_id":"config_name=(config_name)-instance-method","name":"config_name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_name","doc":null,"default_value":"","external_name":"config_name","restriction":""}],"args_string":"(config_name)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L48","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L48","def":{"name":"config_name=","args":[{"name":"config_name","doc":null,"default_value":"","external_name":"config_name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_name = config_name"}},{"id":"config_paths:Array(String)-instance-method","html_id":"config_paths:Array(String)-instance-method","name":"config_paths","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L47","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L47","def":{"name":"config_paths","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_paths"}},{"id":"config_paths=(config_paths)-instance-method","html_id":"config_paths=(config_paths)-instance-method","name":"config_paths=","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_paths","doc":null,"default_value":"","external_name":"config_paths","restriction":""}],"args_string":"(config_paths)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L47","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L47","def":{"name":"config_paths=","args":[{"name":"config_paths","doc":null,"default_value":"","external_name":"config_paths","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_paths = config_paths"}},{"id":"config_type:String?-instance-method","html_id":"config_type:String?-instance-method","name":"config_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L49","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L49","def":{"name":"config_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_type"}},{"id":"config_type=(config_type)-instance-method","html_id":"config_type=(config_type)-instance-method","name":"config_type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"config_type","doc":null,"default_value":"","external_name":"config_type","restriction":""}],"args_string":"(config_type)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L49","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L49","def":{"name":"config_type=","args":[{"name":"config_type","doc":null,"default_value":"","external_name":"config_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@config_type = config_type"}},{"id":"debugging=(value:Bool)-instance-method","html_id":"debugging=(value:Bool)-instance-method","name":"debugging=","doc":"Debugging switch","summary":"<p>Debugging switch</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L368","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L368","def":{"name":"debugging=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger.level = value ? Logger::DEBUG : Logger::ERROR\n@logging = value\n"}},{"id":"each(&block)-instance-method","html_id":"each(&amp;block)-instance-method","name":"each","doc":"Returns an iterator over the `#settings` entries.","summary":"<p>Returns an iterator over the <code><a href=\"../Totem/Config.html#settings%3AHash%28String%2CAny%29-instance-method\">#settings</a></code> entries.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L477","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L477","def":{"name":"each","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"settings.each do |key, value|\n  yield key, value\nend"}},{"id":"env_prefix:String?-instance-method","html_id":"env_prefix:String?-instance-method","name":"env_prefix","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L52","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L52","def":{"name":"env_prefix","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@env_prefix"}},{"id":"env_prefix=(prefix:String)-instance-method","html_id":"env_prefix=(prefix:String)-instance-method","name":"env_prefix=","doc":"Defines a `ENV` prefix\n\nIf defined with \"totem\", Totem will look for env variables that start with \"TOTEM_\"\n\n> It always upcase the prefix.\n\n```\nENV[\"TOTEM_ENV\"] = \"development\"\n\ntotem.env_prefix = \"totem\"\ntotem.bind_env(\"env\")\ntotem.get(\"env\") # => \"development\"\n```","summary":"<p>Defines a <code>ENV</code> prefix</p>","abstract":false,"args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"}],"args_string":"(prefix : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L246","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L246","def":{"name":"env_prefix=","args":[{"name":"prefix","doc":null,"default_value":"","external_name":"prefix","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@env_prefix = prefix.upcase"}},{"id":"fetch(key:String,default_value:Any|Any::Type?=nil):Any?-instance-method","html_id":"fetch(key:String,default_value:Any|Any::Type?=nil):Any?-instance-method","name":"fetch","doc":"Similar to `get` method but returns given value if key not exists.\n\n> Case-insensitive for a key.\n\n```\ntotem.fetch(\"env\", \"development\")\n```","summary":"<p>Similar to <code><a href=\"../Totem/Config.html#get%28key%3AString%29%3AAny-instance-method\">#get</a></code> method but returns given value if key not exists.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"default_value","doc":null,"default_value":"nil","external_name":"default_value","restriction":"Any | Any::Type | ::Nil"}],"args_string":"(key : String, default_value : Any | Any::Type? = <span class=\"n\">nil</span>) : Any?","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L184","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L184","def":{"name":"fetch","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"default_value","doc":null,"default_value":"nil","external_name":"default_value","restriction":"Any | Any::Type | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any | ::Nil","visibility":"Public","body":"if value = find(key)\n  return value\nend\nif default_value.nil?\n  return\nend\ndefault_value.is_a?(Any) ? default_value : Any.new(default_value)\n"}},{"id":"flat_keys:Array(String)-instance-method","html_id":"flat_keys:Array(String)-instance-method","name":"flat_keys","doc":"Returns all keys holding a value, regardless of where they are set.\n\nNested keys are returns with a `#config_delimiter` (= \".\") separator.","summary":"<p>Returns all keys holding a value, regardless of where they are set.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L464","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L464","def":{"name":"flat_keys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"keys = flat_merge(@aliases, @overrides, @env, @config, @defaults, source: {} of String => Bool)\nkeys.each_with_object([] of String) do |__arg0, obj|\n  key = __arg0[0]\n  obj << key\nend\n"}},{"id":"get(key:String):Any-instance-method","html_id":"get(key:String):Any-instance-method","name":"get","doc":"Gets any value by given key\n\nThe behavior of returning the value associated with the first\nplace from where it is set. following order:\noverride, flag, env, config file, default\n\n> Case-insensitive for a key.\n\n```\ntotem.get(\"id\")\ntotem.get(\"user.name\")\n```","summary":"<p>Gets any value by given key</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Any","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L169","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L169","def":{"name":"get","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"if value = find(key)\n  return value\nend\nraise(NotFoundConfigKeyError.new(\"Not found config: #{key}\"))\n"}},{"id":"has_key?(key:String):Bool-instance-method","html_id":"has_key?(key:String):Bool-instance-method","name":"has_key?","doc":"Checks to see if the key has been set in any of the data locations.\n\n> Case-insensitive for a key.","summary":"<p>Checks to see if the key has been set in any of the data locations.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : Bool","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L133","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L133","def":{"name":"has_key?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"find(key) ? true : false"}},{"id":"keys-instance-method","html_id":"keys-instance-method","name":"keys","doc":"Returns an iterator over the key of `#settings` entries.","summary":"<p>Returns an iterator over the key of <code><a href=\"../Totem/Config.html#settings%3AHash%28String%2CAny%29-instance-method\">#settings</a></code> entries.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L472","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L472","def":{"name":"keys","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"settings.keys"}},{"id":"load!-instance-method","html_id":"load!-instance-method","name":"load!","doc":"Load configuration file from disk, searching in the defined paths.\n\n```\ntotem = Totem.new(\"config\")\ntotem.config_paths << \"/etc/totem\" << \"~/.totem\"\nbegin\n  totem.load!\nrescue e\n  puts \"Fatal error config file: #{e.message}\"\nend\n```","summary":"<p>Load configuration file from disk, searching in the defined paths.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L276","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L276","def":{"name":"load!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if file = find_config\nelse\n  return\nend\nload_file!(file)\n"}},{"id":"load_file!(file:String)-instance-method","html_id":"load_file!(file:String)-instance-method","name":"load_file!","doc":"Load configuration file by given file name.\n\nIt will ignore the values of `config_name`, `config_type` and `config_paths`.\n\n```\ntotem = Totem.new(\"config\", \"json\")\ntotem.config_paths << \"/etc/totem\" << \"~/.totem\"\n\nbegin\n  totem.load_file!(\"~/config/development.yaml\")\nrescue e\n  puts \"Fatal error config file: #{e.message}\"\nend\n```","summary":"<p>Load configuration file by given file name.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"args_string":"(file : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L295","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L295","def":{"name":"load_file!","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger.info(\"Attempting to read in config file\")\n@logger.debug(\"Reading file: #{file}\")\n@config_file = file\n@config_type = Utils.config_type(file)\nparse(File.open(file))\n"}},{"id":"mapping(converter:T.class,key:String?=nil)forallT-instance-method","html_id":"mapping(converter:T.class,key:String?=nil)forallT-instance-method","name":"mapping","doc":"Mapping JSON/YAML Serializable to Struct with key\n\n```\nstruct Clothes\n  include JSON::Serializable\n  # or\n  # include YAML::Serializable\n\n  property jacket : String\n  property trousers : String\n  property pants : Hash(String, String)\nend\n\nclothes = totem.mapping(Clothes, \"clothing\")\nclothes.jacket # => \"leather\"\n```","summary":"<p>Mapping JSON/YAML Serializable to Struct with key</p>","abstract":false,"args":[{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"T.class"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"}],"args_string":"(converter : T.class, key : String? = <span class=\"n\">nil</span>) forall T","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L410","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L410","def":{"name":"mapping","args":[{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"T.class"},{"name":"key","doc":null,"default_value":"nil","external_name":"key","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if key && (!(has_key?(key.not_nil!)))\n  NotFoundConfigKeyError.new(\"Not found the key in configuration: #{key}\")\nend\n{% if true %}\n        {{ struct_type = nil }}\n        {% for ancestor in T.ancestors %}\n          {% if ancestor == JSON::Serializable %}\n            {{ struct_type = \"json\" }}\n          {% else %}{% if ancestor == YAML::Serializable %}\n            {{ struct_type = \"yaml\" }}\n          {% end %}{% end %}\n        {% end %}\n\n        {% if struct_type != nil %}\n          raw = key ? find(key.not_nil!).to_{{ struct_type.id }} : to_{{ struct_type.id }}\n          converter.from_{{ struct_type.id }}(raw)\n        {% else %}\n          raise MappingError.new(\"Can not mapping with class: #{T.class}, avaiable in JSON::Serializable, YAML::Serializable\")\n        {% end %}\n      {% end %}\n"}},{"id":"parse(raw:String|IO,config_type=@config_type)-instance-method","html_id":"parse(raw:String|IO,config_type=@config_type)-instance-method","name":"parse","doc":"Parse raw string with given config type to configuration\n\nThe config type are avaiable in:\n\n- yaml/yml\n- json\n- env","summary":"<p>Parse raw string with given config type to configuration</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String | IO"},{"name":"config_type","doc":null,"default_value":"@config_type","external_name":"config_type","restriction":""}],"args_string":"(raw : String | IO, config_type = @config_type)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L439","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L439","def":{"name":"parse","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String | IO"},{"name":"config_type","doc":null,"default_value":"@config_type","external_name":"config_type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (type = config_type) && (SUPPORTED_EXTS.includes?(type))\nelse\n  raise(UnsupportedConfigError.new(\"Unspoort config type: #{type}\"))\nend\ndata = case type\nwhen \"yaml\", \"yml\"\n  (YAML.parse(raw)).as_h\nwhen \"json\"\n  (JSON.parse(raw)).as_h\nwhen \"env\"\n  Poncho.parse(raw)\nend\nif data\nelse\n  return\nend\ndata.each do |key, value|\n  if key.is_a?(YAML::Any)\n    key = key.to_s\n  end\n  @config[key.downcase] = Any.new(value)\nend\n"}},{"id":"set(key:String,value:T)forallT-instance-method","html_id":"set(key:String,value:T)forallT-instance-method","name":"set","doc":"Sets the value for the key in the override regiser.\n\nWill be used instead of values obtained via config file, env, default.\n\n> Case-insensitive for a key.\n\n```\ntotem.set(\"id\", 123)\ntotem.set(\"user.name\", \"foobar\")\n```","summary":"<p>Sets the value for the key in the override regiser.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(key : String, value : T) forall T","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L147","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L147","def":{"name":"set","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = real_key(key.downcase)\npaths = key.split(@config_delimiter)\nlast_key = paths.last.downcase\ndeep_hash = deep_search(@overrides, paths[0..-2])\ndeep_hash[last_key] = Any.new(value)\n"}},{"id":"set_default(key:String,value:T)forallT-instance-method","html_id":"set_default(key:String,value:T)forallT-instance-method","name":"set_default","doc":"Sets the default value for given key\n\n```\ntotem.set_default(\"id\", 123)\ntotem.set_default(\"user.name\", \"foobar\")\n```","summary":"<p>Sets the default value for given key</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(key : String, value : T) forall T","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L74","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L74","def":{"name":"set_default","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"key = real_key(key.downcase)\npaths = key.split(@config_delimiter)\nlast_key = paths.last.downcase\ndeep_hash = deep_search(@defaults, paths[0..-2])\ndeep_hash[last_key] = Any.new(value)\n"}},{"id":"set_defaults(defaults:Hash(String,_))-instance-method","html_id":"set_defaults(defaults:Hash(String,_))-instance-method","name":"set_defaults","doc":"Sets the default values with `Hash` data\n\n```\ntotem.set_defaults({\n  \"id\"   => 123,\n  \"user\" => {\n    \"name\" => \"foobar\",\n  },\n})\n```","summary":"<p>Sets the default values with <code>Hash</code> data</p>","abstract":false,"args":[{"name":"defaults","doc":null,"default_value":"","external_name":"defaults","restriction":"Hash(String, _)"}],"args_string":"(defaults : Hash(String, _))","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L94","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L94","def":{"name":"set_defaults","args":[{"name":"defaults","doc":null,"default_value":"","external_name":"defaults","restriction":"Hash(String, _)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"defaults.each do |key, value|\n  set_default(key, value)\nend"}},{"id":"settings:Hash(String,Any)-instance-method","html_id":"settings:Hash(String,Any)-instance-method","name":"settings","doc":"Returns all settings of configuration.","summary":"<p>Returns all settings of configuration.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Any)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L484","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L484","def":{"name":"settings","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Any)","visibility":"Public","body":"flat_keys.each_with_object({} of String => Any) do |key, obj|\n  if value = find(key)\n  else\n    next\n  end\n  paths = key.split(@config_delimiter)\n  last_key = paths.last.downcase\n  hash = deep_search(obj, paths[0..-2])\n  hash[last_key] = value\nend"}},{"id":"store!-instance-method","html_id":"store!-instance-method","name":"store!","doc":"Store the current configuration to a file.\n\n```\ntotem = Totem.new(\"config\", \"json\")\ntotem.config_paths << \"/etc/totem\" << \"~/.totem\"\n\nbegin\n  totem.store!\nrescue e\n  puts \"Fatal error config file: #{e.message}\"\nend\n```","summary":"<p>Store the current configuration to a file.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L316","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L316","def":{"name":"store!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if file = @config_file\n  if file.empty?\n    raise(Error.new(\"Config file is empty\"))\n  end\n  store_file!(file, true)\nend\nraise(Error.new(\"Config file is not be setted\"))\n"}},{"id":"store_file!(file:String,force:Bool=false)-instance-method","html_id":"store_file!(file:String,force:Bool=false)-instance-method","name":"store_file!","doc":"Store current configuration to a given file.\n\nIt will ignore the values of `config_name`, `config_type` and `config_paths`.\n\n```\ntotem = Totem.new(\"config\", \"json\")\n\nbegin\n  totem.store_file!(\"~/config.yaml\", force: true)\nrescue e\n  puts \"Fatal error config file: #{e.message}\"\nend\n```","summary":"<p>Store current configuration to a given file.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"}],"args_string":"(file : String, force : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L338","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L338","def":{"name":"store_file!","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"force","doc":null,"default_value":"false","external_name":"force","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger.info(\"Attempting to write configuration to file: #{file}\")\nif extname = Utils.config_type(file)\nelse\n  raise(\"Requires vaild extension name with file: #{file}\")\nend\nif SUPPORTED_EXTS.includes?(extname)\nelse\n  raise(UnsupportedConfigError.new(file))\nend\nif (!force) && (File.exists?(file))\n  raise(\"File #{file} exists. Use write_config(force: true) to overwrite\")\nend\nmode = \"w\"\nFile.open(file, mode) do |f|\n  case extname\n  when \"yaml\", \"yml\"\n    f.puts(settings.to_yaml)\n  when \"json\"\n    f.puts(settings.to_json)\n  when \"env\"\n    raise(Error.new(\"Not complete store file with dotenv.\"))\n  end\nend\n"}},{"id":"to_h-instance-method","html_id":"to_h-instance-method","name":"to_h","doc":"Alias to `#settings`","summary":"<p>Alias to <code><a href=\"../Totem/Config.html#settings%3AHash%28String%2CAny%29-instance-method\">#settings</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L688","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/config.cr#L688","def":{"name":"to_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"settings"}}],"macros":[],"types":[]},{"html_id":"github.com/icyleaf/totem/Totem/Exception","path":"Totem/Exception.html","kind":"module","full_name":"Totem::Exception","name":"Exception","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"totem/exception.cr","line_number":2,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/exception.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem","kind":"module","full_name":"Totem","name":"Totem"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/icyleaf/totem/Totem/Exception/MappingError","path":"Totem/Exception/MappingError.html","kind":"class","full_name":"Totem::Exception::MappingError","name":"MappingError","abstract":false,"superclass":{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},"ancestors":[{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},{"html_id":"github.com/icyleaf/totem/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/icyleaf/totem/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/icyleaf/totem/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"totem/exception.cr","line_number":12,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/exception.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem/Exception","kind":"module","full_name":"Totem::Exception","name":"Exception"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/icyleaf/totem/Totem/Exception/NotFoundConfigFileError","path":"Totem/Exception/NotFoundConfigFileError.html","kind":"class","full_name":"Totem::Exception::NotFoundConfigFileError","name":"NotFoundConfigFileError","abstract":false,"superclass":{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},"ancestors":[{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},{"html_id":"github.com/icyleaf/totem/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/icyleaf/totem/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/icyleaf/totem/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"totem/exception.cr","line_number":6,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/exception.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem/Exception","kind":"module","full_name":"Totem::Exception","name":"Exception"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/icyleaf/totem/Totem/Exception/NotFoundConfigKeyError","path":"Totem/Exception/NotFoundConfigKeyError.html","kind":"class","full_name":"Totem::Exception::NotFoundConfigKeyError","name":"NotFoundConfigKeyError","abstract":false,"superclass":{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},"ancestors":[{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},{"html_id":"github.com/icyleaf/totem/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/icyleaf/totem/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/icyleaf/totem/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"totem/exception.cr","line_number":8,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/exception.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem/Exception","kind":"module","full_name":"Totem::Exception","name":"Exception"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/icyleaf/totem/Totem/Exception/UnsupportedConfigError","path":"Totem/Exception/UnsupportedConfigError.html","kind":"class","full_name":"Totem::Exception::UnsupportedConfigError","name":"UnsupportedConfigError","abstract":false,"superclass":{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},"ancestors":[{"html_id":"github.com/icyleaf/totem/Totem/Exception/Error","kind":"class","full_name":"Totem::Exception::Error","name":"Error"},{"html_id":"github.com/icyleaf/totem/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/icyleaf/totem/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/icyleaf/totem/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"totem/exception.cr","line_number":10,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/exception.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem/Exception","kind":"module","full_name":"Totem::Exception","name":"Exception"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/icyleaf/totem/Totem/Utils","path":"Totem/Utils.html","kind":"module","full_name":"Totem::Utils","name":"Utils","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"totem/utils.cr","line_number":2,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/utils.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/icyleaf/totem/Totem/Utils/FileHelper","kind":"module","full_name":"Totem::Utils::FileHelper","name":"FileHelper"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem","kind":"module","full_name":"Totem","name":"Totem"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/icyleaf/totem/Totem/Utils/FileHelper","path":"Totem/Utils/FileHelper.html","kind":"module","full_name":"Totem::Utils::FileHelper","name":"FileHelper","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"totem/utils.cr","line_number":3,"url":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/utils.cr"}],"repository_name":"github.com/icyleaf/totem","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/icyleaf/totem/Totem/Utils","kind":"module","full_name":"Totem::Utils","name":"Utils"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"config_type(file:String)-instance-method","html_id":"config_type(file:String)-instance-method","name":"config_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"args_string":"(file : String)","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/utils.cr#L4","source_link":"https://github.com/icyleaf/totem/blob/9566c0506c1c0cbab13ac527b5b3f5047995ed3c/src/totem/utils.cr#L4","def":{"name":"config_type","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"name = File.basename(file)\nif name.starts_with?(\".\")\n  name = \"xxx.#{name}\"\nend\next = File.extname(name)\next.size > 1 ? ext[1..-1] : nil\n"}}],"macros":[],"types":[]}]}]}]}})